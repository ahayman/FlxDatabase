//
//  SQLOrder.h
//  iDB
//
//  Created by Aaron Hayman on 9/14/12.
//
//

#import <Foundation/Foundation.h>

/**
 SQLOrder is a component class used by SQLStatement to store information regarding the ordering of a SQL query. This class is normally added directly into a SQLStatement or is generated by the SQLStatement in response to a request.
 
 If you add this to any type of SQLStatement other than 'SQLStatementQuery', it will do nothing.
 @warning SQLOrder needs a column name. If you fail to add a column name or use the standard `init`, `nil` will be returned.
 */

typedef NS_ENUM(NSUInteger, SQLOrderDirection){
    SQLOrderAscending,
    SQLOrderDescending
};


@interface SQLOrder : NSObject <NSCopying>
/**
 The column name to order the query by. If this value is not set, no ordering will be generated.
 **/
@property (strong) NSString *column;
/**
 The direction to order the column by. Default: Ascending.
 **/
@property SQLOrderDirection orderDirection;
/**
 If set to YES, ordering will be case sensitive, which means lower case characters will come before (if Ascending) upper case characters.  Default: NO.
 **/
@property BOOL caseSensitive;
/**
 This property is used by the statement to retrieve a string as part of the SQLStatement.
 **/
@property (readonly) NSString *orderDirectionString;
/**
 This allows you to create a custom ordering. This should contain an array of values in the order you want the results to be ordered in. If 'nil', the default ordering will be used. Default: nil;
 **/
@property (strong) NSArray *customOrdering;
/**
 Init with the specified colum in the specified direciton.
 **/
- (id) initWithColumn:(NSString *)column orderDirection:(SQLOrderDirection)order;
@end
